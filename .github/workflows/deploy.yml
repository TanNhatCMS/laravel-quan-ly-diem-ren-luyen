name: Deploy

on:
  workflow_call:
    inputs:
      environment:
        required: true
        type: string
      path_to_repo:
        required: true
        type: string
      environment_url:
        required: false
        type: string
    secrets:
      SSH_USER:
        required: true
      SSH_VPS_HOST:
        required: true
      GITHUB_TOKEN:
        required: true

jobs:
  deploy:
    runs-on: [self-hosted, ansible]
    environment: ${{ inputs.environment }}
    env:
      PATH_TO_REPO: ${{ inputs.path_to_repo }}
      ENVIRONMENT: ${{ inputs.environment }}
      ENVIRONMENT_URL: ${{ inputs.environment_url }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Determine branch/tag
        id: specify-ref
        run: |
          if [ "${{ github.event_name }}" == "workflow_dispatch" ]; then
            REF=${{ github.ref_name }}
          else
            REF="main"
          fi
          echo "REF=$REF" >> $GITHUB_ENV

      - name: SSH into server and deploy
        run: |
          ssh -T ${{ secrets.SSH_USER }}@${{ secrets.SSH_VPS_HOST }} << 'EOF'
            set -e
            if [ ! -d "${{ env.PATH_TO_REPO }}/.git" ]; then
              echo "Cloning repository..."
              git clone git@github.com:${{ github.repository }}.git ${{ env.PATH_TO_REPO }}
            fi
            cd ${{ env.PATH_TO_REPO }}
            git fetch --all
            git checkout $REF
            git pull origin $REF
            echo "Deployment successful!"
          EOF

      - name: Mark Deployment as Successful
        if: success()
        run: |
          curl -X POST -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
               -H "Accept: application/vnd.github.v3+json" \
               https://api.github.com/repos/${{ github.repository }}/deployments/${{ env.DEPLOYMENT_ID }}/statuses \
               -d '{
                    "state": "success",
                    "description": "✅ ${{ env.ENVIRONMENT }} Deploy Success",
                    "environment_url": "${{ env.ENVIRONMENT_URL }}"
                  }'

      - name: Mark Deployment as Failed
        if: failure()
        run: |
          curl -X POST -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
               -H "Accept: application/vnd.github.v3+json" \
               https://api.github.com/repos/${{ github.repository }}/deployments/${{ env.DEPLOYMENT_ID }}/statuses \
               -d '{
                    "state": "failure",
                    "description": "❌ ${{ env.ENVIRONMENT }} Deploy Failed"
                  }'
